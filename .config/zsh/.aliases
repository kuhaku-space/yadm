# https://github.com/online-judge-tools/verification-helper
function atcoder-bundle() {
  oj-bundle -I $HOME/ghq/github.com/kuhaku-space/algo/lib $1 2>/dev/null | grep -v "^#line " | grep -v "^#pragma once" | tr -s "\n"
}

function atcoder-compile() {
  g++-12 $1 -std=gnu++20 -O2 -Wall -Wextra -mtune=native -march=native -fconstexpr-depth=2147483647 -fconstexpr-loop-limit=2147483647 -fconstexpr-ops-limit=2147483647
}

function atcoder-test() {
  find a.cpp &>/dev/null || return 1
  atcoder-bundle a.cpp >main.cpp || return 1
  atcoder-compile main.cpp || return 1
  args=$(getopt e $*) || return 1
  eval "set -- $args"

  E_FLAG=0
  for opt in "$@"; do
    case $opt in
    -e)
      E_FLAG=1
      shift
      ;;
    --)
      shift
      break
      ;;
    esac
  done

  COMMAND="oj t -N"
  if [[ $E_FLAG = 1 ]]; then
    COMMAND="$COMMAND -e 1e-9"
  fi
  eval "$COMMAND"
}

function atcoder-test-and-submit() {
  atcoder-test "$*" || return 1
  oj s main.cpp --yes
}

function atcoder-randam-checker() {
  find a.cpp &>/dev/null || return 1
  atcoder-bundle a.cpp >main.cpp || return 1
  atcoder-compile main.cpp || return 1
  (
    cd checker
    find test.cpp &>/dev/null || return 1
    atcoder-bundle test.cpp >test/main.cpp || return 1
    cd test
    atcoder-compile main.cpp || return 1
    ./a.out
  )
}

alias ojd='cd $HOME/ghq/github.com/kuhaku-space/algo/workspace && rm -rf test/ && oj d'
alias ojb='find a.cpp &>/dev/null && atcoder-bundle a.cpp >main.cpp && atcoder-compile main.cpp'
alias ojt='atcoder-test'
alias ojs='ojb && oj s main.cpp'
alias ojts='atcoder-test-and-submit'
alias ojrc='atcoder-randam-checker'

# Ubuntu
alias apt-up='sudo apt update && sudo apt upgrade -y'

# WSL
alias rm-zone='find . -name "*:Zone.Identifier" -type f -delete'
